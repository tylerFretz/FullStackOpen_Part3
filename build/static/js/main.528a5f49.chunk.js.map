{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/phonebookService.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","className","PersonForm","onSubmit","name","number","onNameChange","onNumberChange","type","Persons","persons","removePerson","map","person","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","onClose","body","App","useState","setPersons","newFilter","setNewFilter","newName","setNewName","newNumber","setNewNumber","notification","setNotification","useEffect","phonebookService","catch","err","console","log","setTimeout","updateNumber","result","window","confirm","filter","p","res","error","alert","personsToShow","toLowerCase","search","event","target","preventDefault","personObject","some","concat","ReactDOM","render","document","getElementById"],"mappings":"qKAWeA,EATA,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAEpB,OACI,sBAAKC,UAAU,SAAf,6BACoB,uBAAOF,MAAOA,EAAOC,SAAUA,QCmB5CE,EAvBI,SAAC,GAMT,IALPC,EAKM,EALNA,SACAC,EAIM,EAJNA,KACAC,EAGM,EAHNA,OACAC,EAEM,EAFNA,aACAC,EACM,EADNA,eAEA,OACI,uBAAMJ,SAAUA,EAAhB,UACI,yCACU,uBAAOJ,MAAOK,EAAMJ,SAAUM,OAExC,2CACY,uBAAOP,MAAOM,EAAQL,SAAUO,OAE5C,8BACI,wBAAQC,KAAK,SAAb,uBCODC,EAvBC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAIxB,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,8BACE,iCACGA,EAAOT,KADV,WAGA,iCACGS,EAAOR,OADV,WAGA,+BACE,wBAAQS,QAAS,kBAAMH,EAAaE,IAApC,wBARIA,EAAOE,U,gBCRnBC,EAAU,iBAoBD,EAlBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgB5B,EAbA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAW5B,EARA,SAACN,EAAIO,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBD,GAAMO,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAM5B,EAHO,SAACN,GAAD,OAAQE,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BD,KCI1CW,EAnBM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC7B,OAAgB,OAAZD,EACO,KAIP,sBAAK1B,UAAW0B,EAAQnB,KAAxB,UACI,+BACI,wBAAQM,QAAS,kBAAMc,KAAvB,iBAEJ,+BACKD,EAAQE,OAEb,2BCgJGC,EAzJH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRrB,EADQ,KACCsB,EADD,OAEoBD,mBAAS,IAF7B,mBAERE,EAFQ,KAEGC,EAFH,OAGgBH,mBAAS,IAHzB,mBAGRI,EAHQ,KAGCC,EAHD,OAIoBL,mBAAS,IAJ7B,mBAIRM,EAJQ,KAIGC,EAJH,OAK0BP,mBAAS,MALnC,mBAKRQ,EALQ,KAKMC,EALN,KAahBC,qBAAU,WACRC,IAEGvB,MAAM,SAAAC,GAAQ,OAAIY,EAAWZ,MAC7BuB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IAEHH,qBAAU,WACRM,YAAW,WACTP,EAAgB,QACf,OACF,CAACD,IAGJ,IAmEMS,EAAe,SAAAnC,GACnB,IAAMoC,EAASC,OAAOC,QAAP,UAAkBtC,EAAOT,KAAzB,8EAETW,EAAKL,EAAQ0C,QAAO,SAAAC,GAAC,OAAIA,EAAEjD,OAAS+B,KAASvB,KAAI,SAAAyC,GAAC,OAAIA,EAAEtC,MAE9DkC,EACAP,EAAwB3B,EAAIF,GACzBM,MAAK,SAAAmC,GACJtB,EAAWtB,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOE,KAAOA,EAAKF,EAASyC,MAC7Dd,EACI,CACEX,KAAK,GAAD,OAAKhB,EAAOT,KAAZ,yBACJI,KAAM,YAIbmC,OAAM,SAAAC,GACLZ,EAAWtB,EAAQ0C,QAAO,SAAAC,GAAC,OAAIA,EAAEtC,KAAOF,EAAOE,OAC/C8B,QAAQC,IAAIF,GACZJ,EACI,CACEX,KAAK,GAAD,OAAKe,EAAIxB,SAASC,KAAKkC,OAC3B/C,KAAM,UAGVqC,QAAQC,IAAIF,EAAIxB,SAASC,SAE7BmC,MAAM,gCAGJC,EAAgBxB,EACpBvB,EAAQ0C,QAAO,SAAAvC,GAAM,OAAmE,IAA/DA,EAAOT,KAAKsD,cAAcC,OAAO1B,EAAUyB,kBACpEhD,EAEF,OACE,gCACE,2CAEA,cAAC,EAAD,CAAciB,QAASY,EAAcX,QA1HT,SAAAgC,GAAK,OAAIpB,EAAgB,SA4HrD,cAAC,EAAD,CAAQzC,MAAOkC,EAAWjC,SA7HH,SAAC4D,GAAD,OAAW1B,EAAa0B,EAAMC,OAAO9D,UA+H5D,mDAEA,cAAC,EAAD,CACEI,SAhHY,SAAAyD,GAChBA,EAAME,iBAEN,IAAMC,EAAe,CACnB3D,KAAM+B,EACN9B,OAAQgC,GAGN3B,EAAQsD,MAAK,SAAAnD,GAAM,OAAIA,EAAOT,OAAS+B,KACzCa,EAAae,IAIbrB,EAAwBqB,GACrB5C,MAAK,SAAAmC,GACJT,QAAQC,IAAIQ,GACZtB,EAAWtB,EAAQuD,OAAOF,IAC1BvB,EACE,CACEX,KAAK,SAAD,OAAWkC,EAAa3D,MAC5BI,KAAM,YAIXmC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZJ,EACE,CACEX,KAAK,GAAD,OAAKe,EAAIxB,SAASC,KAAKkC,OAC3B/C,KAAM,UAGVqC,QAAQC,IAAIF,EAAIxB,SAASC,SAI/Be,EAAW,IACXE,EAAa,MA4ETlC,KAAM+B,EACN9B,OAAQgC,EACR/B,aAvImB,SAACsD,GAAD,OAAWxB,EAAWwB,EAAMC,OAAO9D,QAwItDQ,eAvIqB,SAACqD,GAAD,OAAWtB,EAAasB,EAAMC,OAAO9D,UA0I5D,yCAEA,cAAC,EAAD,CAASW,QAAS+C,EAAe9C,aAjFhB,SAAAE,GACJqC,OAAOC,QAAP,iBAAyBtC,EAAOT,KAAhC,OAGfsC,EAA+B7B,EAAOE,IACnCI,MAAK,SAAAmC,GACJtB,EAAWtB,EAAQ0C,QAAO,SAAAC,GAAC,OAAIA,EAAEtC,KAAOF,EAAOE,OAC/CyB,EACI,CACEX,KAAK,mBAAD,OAAqBhB,EAAOT,KAA5B,kCACJI,KAAM,YAIbmC,OAAM,SAAAC,GACLZ,EAAWtB,EAAQ0C,QAAO,SAAAC,GAAC,OAAIA,EAAEtC,KAAOF,EAAOE,OAC7CyB,EACE,CACEX,KAAK,mBAAD,OAAqBhB,EAAOT,KAA5B,0CACJI,KAAM,UAGVqC,QAAQC,IAAIF,MAEhBY,MAAM,sC,MC7FZU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.528a5f49.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({value, onChange}) => {\r\n\r\n    return (\r\n        <div className=\"filter\">\r\n            filter by name: <input value={value} onChange={onChange}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = ({\r\n    onSubmit,\r\n    name,\r\n    number,\r\n    onNameChange,\r\n    onNumberChange\r\n    }) => {\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div>\r\n                name: <input value={name} onChange={onNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={number} onChange={onNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Persons = ({ persons, removePerson }) => {\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        {persons.map(person => (\r\n          <p key={person.id}>\r\n            <span>\r\n              {person.name} &nbsp;\r\n            </span>\r\n            <span>\r\n              {person.number} &nbsp;\r\n            </span>\r\n            <span>\r\n              <button onClick={() => removePerson(person)}>delete</button>\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default Persons;","import axios from 'axios'\r\nconst baseUrl = '/api/phonebook'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteContact = (id) => axios.delete(`${baseUrl}/${id}`)\r\n\r\n\r\nexport default { getAll, create, update, deleteContact }\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst Notification = ({ message, onClose }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={message.type}>\r\n            <span>\r\n                <button onClick={() => onClose()}>X</button>\r\n            </span>\r\n            <span>\r\n                {message.body}\r\n            </span>\r\n            <br/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\r\nimport Filter from './components/Filter';\r\nimport PersonForm from './components/PersonForm';\r\nimport Persons from './components/Persons';\r\nimport phonebookService from './services/phonebookService';\r\nimport Notification from './components/Notification';\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ notification, setNotification ] = useState(null)\r\n\r\n  const handleNameChange = (event) => setNewName(event.target.value)\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n  const handleFilterChange = (event) => setNewFilter(event.target.value)\r\n  const handleNotificationClose = event => setNotification(null)\r\n\r\n\r\n  useEffect(() => {\r\n    phonebookService\r\n      .getAll()\r\n      .then( response => setPersons(response))\r\n      .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setNotification(null)\r\n    }, 10000)\r\n  }, [notification])\r\n\r\n\r\n  const addPerson = event => {\r\n    event.preventDefault();\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    if (persons.some(person => person.name === newName)) {\r\n      updateNumber(personObject)\r\n      return\r\n    }\r\n    else { \r\n      phonebookService.create(personObject)\r\n        .then(res => {\r\n          console.log(res)\r\n          setPersons(persons.concat(personObject))\r\n          setNotification(\r\n            {\r\n              body: `Added ${personObject.name}`,\r\n              type: 'info'\r\n            }\r\n          )\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          setNotification(\r\n            {\r\n              body: `${err.response.data.error}`,\r\n              type: 'error'\r\n            }\r\n          )\r\n          console.log(err.response.data)\r\n        })\r\n    }\r\n\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const removePerson = person => {\r\n    const result = window.confirm(`Delete ${person.name} ?`)\r\n\r\n    result ?\r\n    phonebookService.deleteContact(person.id)\r\n      .then(res => {\r\n        setPersons(persons.filter(p => p.id !== person.id))\r\n        setNotification(\r\n            {\r\n              body: `Information of '${person.name}' has been removed from server`,\r\n              type: 'info'\r\n            }\r\n          )\r\n      })\r\n      .catch(err => {\r\n        setPersons(persons.filter(p => p.id !== person.id))\r\n          setNotification(\r\n            {\r\n              body: `Information of '${person.name}' has already been removed from server`,\r\n              type: 'error'\r\n            }\r\n          )\r\n          console.log(err);\r\n      })\r\n    : alert(\"The contact was not deleted\")\r\n  }\r\n\r\n  const updateNumber = person => {\r\n    const result = window.confirm(`${person.name} is already added to the phonebook, update the old number with a new one?`)\r\n\r\n    const id = persons.filter(p => p.name === newName).map(p => p.id);\r\n\r\n    result ?\r\n    phonebookService.update(id, person)\r\n      .then(res => {\r\n        setPersons(persons.map(person => person.id !== id ? person : res))\r\n        setNotification(\r\n            {\r\n              body: `${person.name}'s number was updated`,\r\n              type: 'info'\r\n            }\r\n        )\r\n      })\r\n      .catch(err => {\r\n        setPersons(persons.filter(p => p.id !== person.id))\r\n        console.log(err)\r\n        setNotification(\r\n            {\r\n              body: `${err.response.data.error}`,\r\n              type: 'error'\r\n            }\r\n          )\r\n          console.log(err.response.data);\r\n      })\r\n    : alert(\"The contact was not updated\")\r\n  }\r\n\r\n  const personsToShow = newFilter\r\n  ? persons.filter(person => person.name.toLowerCase().search(newFilter.toLowerCase()) !== -1)\r\n  : persons;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n\r\n      <Notification message={notification} onClose={handleNotificationClose}/>\r\n\r\n      <Filter value={newFilter} onChange={handleFilterChange}/>\r\n\r\n      <h3>Add a new contact</h3>\r\n\r\n      <PersonForm\r\n        onSubmit={addPerson}\r\n        name={newName}\r\n        number={newNumber}\r\n        onNameChange={handleNameChange}\r\n        onNumberChange={handleNumberChange}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n\r\n      <Persons persons={personsToShow} removePerson={removePerson}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}